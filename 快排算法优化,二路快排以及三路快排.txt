public class Test3 {
    public static void main(String[] args) {
        int[] data= new int[]{4,5,6,1,3,2};
        quickSort(data);
        print(data);
    }
    private static void quickSort(int[] array){
        int n=array.length;
        int l=0;
        int r=n-1;
        if(n<=1){
            return ;
        }else {
             quickSortInternal(array,l,r);
        }
    }
    private static void quickSortInternal(int[] array,int l,int r){
        if(l>=r){
            return;
        }
        //分区点
        int q=partition3(array,l,r);
        quickSortInternal(array,l,q-1);
        quickSortInternal(array,q+1,r);
    }
    //快排
//    private static int partition(int[] array,int l,int r){
//        //随机选取一个元素下标作为基准值
//        //Math.random()[0,1]之间的任意值
//        int randomIndex=(int)(Math.random()*(r-l+1)+l);
//        swap(array,l,randomIndex);
//        int v=array[l];
//        //[l+1,j],刚开始的数组为空,比第一个元素小
//        int j=l;
//        //[j+1,i-1],比第一个元素大的,刚开始为空数组
//        int i=l+1;
//        //i是当前遍历的元素
//        for (;i<=r;i++){
//            if(array[i]<v){
//                swap(array,j+1,i);
//                j++;
//            }
//        }
//        swap(array,l,j);
//        return j;
//    }
    //二路快排
//    private static int partition2(int[] array,int l,int r){
//        int randomIndex =(int)(Math.random()*(r-l+1)+l);
//        swap(array,l,randomIndex);
//        int v=array[l];
//        int i=l+1;
//        int j=r;
//        while(true){
//            //如果遍历的元素i比基准值小,则i++
//            //遍历的元素j比基准值大则j--;
//            while(i<=r && array[i]<v)i++;
//            while(j>=l+1 && array[j]>v)j--;
//            if(i>j){
//                break;
//            }
//            //上述两者都不满足也就是i遍历的元素比基准值大,j遍历的元素比基准值小,
//            //交换i与j的值
//            swap(array,i,j);
//            i++;
//            j--;
//        }
//        //找到分区点,将基准值与最小元素最后一个进行交换
//        swap(array,l,j);
//        return j;
//    }
    //三路快排
    private static int partition3(int[] array,int l,int r){
        //随机选取数组中的任意一个元素
        int randomIndex = (int)(Math.random()*(r-l+1)+l);
        swap(array,l,randomIndex);
        int v=array[l];
        //array[l+1,lt]<v
        int lt=l;
        //array[lt+1,i-1]==v
        int i=l+1;
        //array[gt,r]>v
        int gt=r+1;
        while(i<gt){
            if(array[i]<v){
                swap(array,i,lt+1);
                i++;
                lt++;
            }else if(array[i]>v){
                swap(array,i,gt-1);
                gt--;
            }else{
                i++;
            }
        }
        swap(array,l,lt);
        return lt;
    }
    private static void swap(int[] array,int IndexA,int IndexB){
        int temp=array[IndexA];
        array[IndexA]=array[IndexB];
        array[IndexB]=temp;
    }
    private static void print(int[] array){
        for(int i:array){
            System.out.print(i+"\t");
        }
    }
}